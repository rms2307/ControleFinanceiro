// <auto-generated />
using System;
using ControleFinanceiro.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleFinanceiro.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221011152043_UpdateTableCreditCard")]
    partial class UpdateTableCreditCard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("InvoiceClosingDay")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("InvoiceDueDay")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<int>("LastFourDigits")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<decimal>("LimitAmount")
                        .HasColumnType("numeric")
                        .HasColumnOrder(6);

                    b.Property<decimal>("RemainingLimit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.CreditCardSpend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("BuyDay")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(7);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("CreditCardId")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(5);

                    b.Property<int>("NumberInstallments")
                        .HasColumnType("integer")
                        .HasColumnOrder(8);

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreditCardId");

                    b.HasIndex("Id");

                    b.ToTable("CreditCardSpend", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.FixedSpend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnOrder(6);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DebitDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(7)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(5);

                    b.Property<int>("FixedSpendCategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FixedSpendCategoryId");

                    b.HasIndex("Id");

                    b.ToTable("FixedSpend", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.FixedSpendCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(3);

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("FixedSpendCategory", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.VariedSpend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnOrder(5);

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DebitDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnOrder(6)
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(4);

                    b.Property<string>("UserLog")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Id");

                    b.ToTable("VariedSpend", (string)null);
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.CreditCardSpend", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Entities.CreditCard", "CreditCard")
                        .WithMany("CreditCardSpends")
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CreditCard");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.FixedSpend", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleFinanceiro.Domain.Entities.FixedSpendCategory", "FixedSpendCategory")
                        .WithMany()
                        .HasForeignKey("FixedSpendCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("FixedSpendCategory");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.VariedSpend", b =>
                {
                    b.HasOne("ControleFinanceiro.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ControleFinanceiro.Domain.Entities.CreditCard", b =>
                {
                    b.Navigation("CreditCardSpends");
                });
#pragma warning restore 612, 618
        }
    }
}
